plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.androidtestpractice"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"
        viewBinding.enabled = true

        testInstrumentationRunner "com.shaon2016.cleancodewithtest.CustomTestRunner"

    }

    buildTypes {
        buildTypes.each {
            it.buildConfigField 'String', 'SERVER_URL', BASE_URL
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "CleanCodeTest-v${variant.versionCode}-${variant.versionName}-${new Date().format('ddMMyy_HHmm')}-${variant.flavorName}-${variant.buildType.name}.apk"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }

    flavorDimensions "version"
    productFlavors {
        demo {
            dimension "version"
            buildConfigField "String", "SERVER_URL", '"https://api.mercadolibre.com/"'
        }
        live {
            dimension "version"
            buildConfigField "String", "SERVER_URL", 'https://api.mercadolibre.com/"'
        }
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'

    // Room
    ext.roomVersion = "2.4.2"
    implementation("androidx.room:room-runtime:$roomVersion")
    kapt("androidx.room:room-compiler:$roomVersion")
    implementation("androidx.room:room-ktx:$roomVersion")

    // Hilt
    implementation("com.google.dagger:hilt-android:2.38.1")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.9.0'
//    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Test
    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Architectural component test
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    // room test
    androidTestImplementation("androidx.room:room-testing:$roomVersion")
    // coroutine test
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0"

    // MockWebServer
    androidTestImplementation("com.squareup.okhttp3:mockwebserver:4.9.3")

    // Hilt test
    // For Robolectric tests.
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.38.1")
    testImplementation("com.google.dagger:hilt-android-testing:2.38.1")

    // For instrumented tests.
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.38.1")
    // ...with Kotlin.
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.38.1")

    //navigation componenet
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'

    //Lifecycle
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
}